{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/halil/VSCodeProjects/steam_worth/app/api/resolveVanityURL/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\r\n\r\nconst STEAM_API_KEY = process.env.STEAM_API_KEY;\r\n\r\nexport async function GET(req: NextRequest) {\r\n  const { searchParams } = new URL(req.url);\r\n  const vanityUrl = searchParams.get('vanityurl');\r\n\r\n  if (!vanityUrl) {\r\n    return NextResponse.json({ error: \"Vanity URL is required\" }, { status: 400 });\r\n  }\r\n\r\n  try {\r\n    const response = await fetch(\r\n      `https://api.steampowered.com/ISteamUser/ResolveVanityURL/v1/?key=${STEAM_API_KEY}&vanityurl=${vanityUrl}`\r\n    );\r\n    const data = await response.json();\r\n\r\n    if (!response.ok || !data.response) {\r\n      return NextResponse.json({ error: \"Failed to resolve Vanity URL\" }, { status: 500 });\r\n    }\r\n\r\n    return NextResponse.json(data);\r\n  } catch (error) {\r\n    console.error(\"Error:\", error);\r\n    return NextResponse.json({ error: \"Internal server error\" }, { status: 500 });\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,gBAAgB,QAAQ,GAAG,CAAC,aAAa;AAExC,eAAe,IAAI,GAAgB;IACxC,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,IAAI,GAAG;IACxC,MAAM,YAAY,aAAa,GAAG,CAAC;IAEnC,IAAI,CAAC,WAAW;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAyB,GAAG;YAAE,QAAQ;QAAI;IAC9E;IAEA,IAAI;QACF,MAAM,WAAW,MAAM,MACrB,CAAC,iEAAiE,EAAE,cAAc,WAAW,EAAE,WAAW;QAE5G,MAAM,OAAO,MAAM,SAAS,IAAI;QAEhC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,KAAK,QAAQ,EAAE;YAClC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAA+B,GAAG;gBAAE,QAAQ;YAAI;QACpF;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,UAAU;QACxB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAwB,GAAG;YAAE,QAAQ;QAAI;IAC7E;AACF"}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}