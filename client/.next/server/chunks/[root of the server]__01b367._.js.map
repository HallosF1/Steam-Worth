{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/halil/VSCodeProjects/steam_worth/app/api/fetchAccount/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\"\r\n\r\n\r\nexport async function GET(req: Request) {\r\n    const { searchParams } = new URL(req.url);\r\n    const id = searchParams.get('id');\r\n    const key = process.env.STEAM_API_KEY;\r\n    \r\n    if (!id) {\r\n        return NextResponse.json({ error: \"ID is insufficient\" }, { status: 404 });\r\n    }\r\n    try {\r\n        const accountSummary = await fetch(`https://api.steampowered.com/ISteamUser/GetPlayerSummaries/v0002/?key=${key}&steamids=${id}`)\r\n        const accountSummaryData = await accountSummary.json()\r\n       \r\n        const timeCreated = parseInt(accountSummaryData.response.players[0].timecreated.toString(), 10);\r\n        const accountCreatedAt = new Date(timeCreated * 1000);\r\n        const currentDate = new Date();\r\n        const diffInMilli = currentDate.getTime() - accountCreatedAt.getTime();\r\n        const diffInYears = diffInMilli / (1000 * 60 * 60 * 24 * 365.25);\r\n        const accountAge = Math.floor(diffInYears);\r\n        let visibility: string = \"\";\r\n        switch (accountSummaryData.response.players[0].communityvisibilitystate) {\r\n          case 0:\r\n            visibility = \"Offline\";\r\n            break;\r\n          case 1:\r\n            visibility = \"Online\";\r\n            break;\r\n          case 2:\r\n            visibility = \"Busy\";\r\n            break;\r\n          case 3:\r\n            visibility = \"Away\";\r\n            break;\r\n          case 4:\r\n            visibility = \"Snooze\";\r\n            break;\r\n          case 5:\r\n            visibility = \"Looking to Trade\";\r\n            break;\r\n          case 6:\r\n            visibility = \"Looking to Play\";\r\n            break;\r\n          default:\r\n            visibility = \"Unknown\";\r\n        }\r\n        const selectedFeatures = {\r\n            avatar: accountSummaryData.response.players[0].avatarmedium,\r\n            visibility: visibility,\r\n            name: accountSummaryData.response.players[0].personaname,\r\n            accountAge: accountAge \r\n        }\r\n        return NextResponse.json({account: selectedFeatures}, {status: 200})\r\n    } catch (error) {\r\n        console.log(error)\r\n        return NextResponse.json(error, {status: 500})\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;;AAGO,eAAe,IAAI,GAAY;IAClC,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,IAAI,GAAG;IACxC,MAAM,KAAK,aAAa,GAAG,CAAC;IAC5B,MAAM,MAAM,QAAQ,GAAG,CAAC,aAAa;IAErC,IAAI,CAAC,IAAI;QACL,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAqB,GAAG;YAAE,QAAQ;QAAI;IAC5E;IACA,IAAI;QACA,MAAM,iBAAiB,MAAM,MAAM,CAAC,sEAAsE,EAAE,IAAI,UAAU,EAAE,IAAI;QAChI,MAAM,qBAAqB,MAAM,eAAe,IAAI;QAEpD,MAAM,cAAc,SAAS,mBAAmB,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC,WAAW,CAAC,QAAQ,IAAI;QAC5F,MAAM,mBAAmB,IAAI,KAAK,cAAc;QAChD,MAAM,cAAc,IAAI;QACxB,MAAM,cAAc,YAAY,OAAO,KAAK,iBAAiB,OAAO;QACpE,MAAM,cAAc,cAAc,CAAC,OAAO,KAAK,KAAK,KAAK,MAAM;QAC/D,MAAM,aAAa,KAAK,KAAK,CAAC;QAC9B,IAAI,aAAqB;QACzB,OAAQ,mBAAmB,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC,wBAAwB;YACrE,KAAK;gBACH,aAAa;gBACb;YACF,KAAK;gBACH,aAAa;gBACb;YACF,KAAK;gBACH,aAAa;gBACb;YACF,KAAK;gBACH,aAAa;gBACb;YACF,KAAK;gBACH,aAAa;gBACb;YACF,KAAK;gBACH,aAAa;gBACb;YACF,KAAK;gBACH,aAAa;gBACb;YACF;gBACE,aAAa;QACjB;QACA,MAAM,mBAAmB;YACrB,QAAQ,mBAAmB,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC,YAAY;YAC3D,YAAY;YACZ,MAAM,mBAAmB,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC,WAAW;YACxD,YAAY;QAChB;QACA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAC,SAAS;QAAgB,GAAG;YAAC,QAAQ;QAAG;IACtE,EAAE,OAAO,OAAO;QACZ,QAAQ,GAAG,CAAC;QACZ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,OAAO;YAAC,QAAQ;QAAG;IAChD;AACJ"}},
    {"offset": {"line": 124, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}